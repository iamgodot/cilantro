{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cilantro","text":"<p>Cilantro is an async Python web framework.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"CHANGELOG/#010-2024-07-09","title":"[0.1.0] - 2024-07-09","text":""},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Initialize project</li> </ul>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#cilantro.Headers","title":"cilantro.Headers","text":"<p>               Bases: <code>Mapping</code></p> <p>An immutable case-insensitive class for HTTP headers.</p> <p>The headers object is read-only. For usage, keys are all considered case-insensitive, and retrieved values will all be lowercase.</p> <p>The original headers data will be available as the <code>raw</code> property.</p> Initialization <p>Initializes with either a list of tuples or a dictionary.</p> <p>An input headers dict will be converted to a list of tuples of header keys and values in bytes without changing the case.</p> <p>Internally there's a dictionary mapping every header key to a list of values. Values of the same key will be deduplicated and stored in the original order.</p> Equality <p>Any headers object with the same keys and values are considered equal.</p>"},{"location":"api/#cilantro.Headers.raw","title":"raw  <code>property</code>","text":"<pre><code>raw\n</code></pre> <p>The original headers data.</p>"},{"location":"api/#cilantro.Headers.get","title":"get","text":"<pre><code>get(key, default=None)\n</code></pre> <p>Gets the first value of a header key, or a default value if not found.</p>"},{"location":"api/#cilantro.Headers.list","title":"list","text":"<pre><code>list(key)\n</code></pre> <p>Lists all values of a header key in the original order.</p>"},{"location":"api/#cilantro.MutableHeaders","title":"cilantro.MutableHeaders","text":"<p>               Bases: <code>Headers</code></p> <p>A mutable case-insensitive class for HTTP headers.</p>"},{"location":"api/#cilantro.MutableHeaders.append","title":"append","text":"<pre><code>append(key, value)\n</code></pre> <p>Appends a value if the key exists, otherwise creates a new key.</p>"},{"location":"api/#cilantro.MutableHeaders.pop","title":"pop","text":"<pre><code>pop(key)\n</code></pre> <p>Removes a key and returns its values.</p>"},{"location":"api/#cilantro.MutableHeaders.set","title":"set","text":"<pre><code>set(key, value)\n</code></pre> <p>Sets a value for a key, overwriting any existing values.</p>"},{"location":"api/#cilantro.response","title":"cilantro.response  <code>async</code>","text":"<pre><code>response(content, *, content_type='text/plain', status=200, headers=None, charset='utf-8')\n</code></pre> <p>Generates a response dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>(bytes, str, dict)</code> <p>Content of response body.</p> required <code>content_type</code> <code>str</code> <p>Defaults to \"text/plain\".</p> <code>'text/plain'</code> <code>status</code> <code>int</code> <p>Defaults to 200.</p> <code>200</code> <code>headers</code> <code>dict</code> <p>Defaults to None.</p> <code>None</code> <code>charset</code> <code>str</code> <p>Defaults to \"utf-8\".</p> <code>'utf-8'</code> <p>Returns:</p> Type Description <code>dict[str, int | list[tuple[bytes, bytes]] | bytes]</code> <p>A dictionary contains the status code, headers and body.</p> <p>Examples:</p> <pre><code>{\n    \"status\": 200,\n    \"headers\": [\n        (b\"content-type\", b\"text/plain; charset=utf-8\"),\n        (b\"content-length\", b\"12\")\n    ],\n    \"body\": b\"Hello world!\"\n}\n</code></pre> <p>Raises:</p> Type Description <code>ValueError</code> <p>If redirect content is not a string.</p>"}]}